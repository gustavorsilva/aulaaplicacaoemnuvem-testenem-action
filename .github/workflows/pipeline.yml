name: integracao-ecr-eb

on:
  push:
    branches: 
      - main
      - release/*

env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      TAG: ${{ vars.TAG }}
      STACK_NAME: ${{ vars.STACK_NAME }}
  
jobs:
  check_inserts:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Garante que temos commits suficientes para a comparação

    - name: Get previous commit SHA
      id: prev-commit
      run: echo "PREVIOUS_SHA=$(git rev-parse HEAD^1)" >> $GITHUB_ENV

    - name: Count inserted lines
      id: count_inserts
      run: |
        PREVIOUS_SHA="${{ env.PREVIOUS_SHA }}"
        CURRENT_SHA="${{ github.sha }}"
        echo "Previous SHA: $PREVIOUS_SHA"
        echo "Current SHA: $CURRENT_SHA"
        INSERTED_LINES=$(git diff --numstat "$PREVIOUS_SHA" "$CURRENT_SHA" -- my-folder | awk '{inserted+=$1} END {print inserted}')
        echo "INSERTED_LINES=$INSERTED_LINES" >> $GITHUB_ENV
        echo "::set-output name=inserted_lines::$INSERTED_LINES"
      env:
        PREVIOUS_SHA: ${{ env.PREVIOUS_SHA }}

  manual_approval:
    needs: check_inserts
    if: ${{ needs.check_inserts.outputs.inserted_lines }} -ge 40
    runs-on: ubuntu-latest

    steps:
    - name: Create approval request
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: manual-approval
        client-payload: '{"message": "The number of inserted lines ( ${{ needs.check_inserts.outputs.inserted_lines }} ) exceeds the limit. Please approve to continue."}'

  wait_for_approval:
    needs: manual_approval
    runs-on: ubuntu-latest
    if: ${{ needs.check_inserts.outputs.inserted_lines }} -ge 40
    steps:
    - name: Wait for approval
      id: wait
      run: |
        echo "Waiting for approval..."
        sleep 60
        APPROVED=false
        for i in {1..30}; do
          COMMENTS=$(gh pr view ${{ github.event.pull_request.number }} --json comments -q '.comments[].body')
          if echo "$COMMENTS" | grep -q "approved"; then
            APPROVED=true
            break
          fi
          sleep 60
        done
        if [ "$APPROVED" != "true" ]; then
          echo "Approval not received."
          exit 1
        fi
        echo "Approval received."

  deploy:
    needs: [check_inserts, wait_for_approval]
    runs-on: ubuntu-latest

    steps:
    - name: Deploy application
      run: echo "Deploying application..."


  # create_ec2:
  #   runs-on: ubuntu-latest
  #   needs: check_inserts

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '14'

  #   - name: Install AWS CLI
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y awscli

  #   - name: Configure AWS credentials
  #     run: |
  #       aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws configure set default.region ${{ vars.AWS_REGION }}

  #   - name: Launch EC2 instance
  #     run: |
  #       aws ec2 run-instances \
  #         --image-id ami-08a0d1e16fc3f61ea\
  #         --count 1 \
  #         --instance-type t2.micro \
  #         --key-name ssl \
  #         --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=MyInstance}]'
        