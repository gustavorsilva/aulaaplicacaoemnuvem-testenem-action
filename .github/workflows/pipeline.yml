name: integracao-ecr-eb

on:
  push:
    branches: 
      - main
      - release/*

env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      TAG: ${{ vars.TAG }}
      STACK_NAME: ${{ vars.STACK_NAME }}
  
jobs:
  check_inserts:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Garante que temos commits suficientes para a comparação

    - name: Count inserted lines
      id: count_inserts
      run: |
        PREVIOUS_SHA="${{ env.PREVIOUS_SHA }}"
        CURRENT_SHA="${{ github.sha }}"
        echo "Previous SHA: $PREVIOUS_SHA"
        echo "Current SHA: $CURRENT_SHA"
        INSERTED_LINES=$(git diff --numstat "$PREVIOUS_SHA" "$CURRENT_SHA" -- my-folder | awk '{inserted+=$1} END {print inserted}')
        echo "INSERTED_LINES=$INSERTED_LINES" >> $GITHUB_ENV
        echo "::set-output name=inserted_lines::$INSERTED_LINES"
      env:
        PREVIOUS_SHA: ${{ env.PREVIOUS_SHA }}

    - name: Request manual approval
      if: ${{ steps.count_inserts.outputs.inserted_lines }} -ge 40
      uses: actions/github-script@v6
      with:
        script: |
          const { GITHUB_TOKEN } = process.env;
          const octokit = require('@actions/github').getOctokit(GITHUB_TOKEN);
          await octokit.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "Approval Required",
            body: `The number of inserted lines (${steps.count_inserts.outputs.inserted_lines}) exceeds the limit. Please approve to continue.`,
            labels: ['approval-required']
          });


  # create_ec2:
  #   runs-on: ubuntu-latest
  #   needs: check_inserts

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '14'

  #   - name: Install AWS CLI
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y awscli

  #   - name: Configure AWS credentials
  #     run: |
  #       aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws configure set default.region ${{ vars.AWS_REGION }}

  #   - name: Launch EC2 instance
  #     run: |
  #       aws ec2 run-instances \
  #         --image-id ami-08a0d1e16fc3f61ea\
  #         --count 1 \
  #         --instance-type t2.micro \
  #         --key-name ssl \
  #         --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=MyInstance}]'
        